20180625-20180704:12h

环境配置：
暂且假设128段为公网IP，64，81段为内网IP，108段暂时不用
Ar93xx(Ubuntu10.04)
eth4：192.168.108.109（桥接的windows网卡1）
eth5：192.168.81.32（桥接的windows网卡2）
Ubuntu16.1
ens38：192.168.81.64（桥接的windows网卡2）
ens33：192.168.128.64（虚拟机的NAT）
ens39：10.10.10.64（虚拟机主机模式NAT）
Ubuntu16.2
ens39：10.10.10.81（虚拟机主机模式NAT）
ens33：192.168.128.81（虚拟机的NAT）
ens38：10.10.10.81（桥接的微软环回网卡）
Ubuntu7.04
eth2：192.168.64.108（桥接的微软环回网卡）
eth1：192.168.108.112（桥接的windows网卡1）
(PS：之前用的虚拟机NAT的128网段来充当模拟的外网IP，
但发现这个网段致使16.1可以通过直接windows连接Ubuntu7.04，
16.2也可以通过windows直接连接Ar93xx，
正常是无法连接的，破坏了网络环境，就将模拟的外网IP改成主机模式)

Ubuntu7.04：ifconfig eth1 down 
Ar93xx：ifconfig eth4 down

Ubuntu16.1和16.2需要设置转发和NAT
1、开启IP转发
//临时
# echo "1" > /proc/sys/net/ipv4/ip_forward
//永久
# vi /etc/sysctl.conf
net.ipv4.ip_forward=1   //取消注释
# sysctl -p //保存
2. 设置iptables规则
（PS：之前以为不需要设置，假如Ar93xx的81段通过16.1给16.2发数据包，
要是不做NAT的话，源ip还是Ar93xx，而此时16.2没有到81段的路由，数据包无法返回）
（PS：下面前三个命令只是以防万一，第四个最重要）
# iptables -F   //清除所有的iptables规则
# iptables -P INPUT ACCEPT  //允许接收
# iptables -P FORWARD ACCEPT    //允许发送数据包
（PS：-t为指定nat表，-A表示添加，POSTROUTING为指定POSTROUTING链，
-o表示从ens39接口出去，-j MASQUERADE表示自动获取ens39的ip来更改源IP）
# iptables -t nat -A POSTROUTING -s 192.168.64.0/24 -o ens39 -j MASQUERADE //MASQUERADE方式配置nat

windows宿主
微软环回网卡：192.168.64.90

完整连接
left表示Ubuntu16.1：10.10.10.64
right表示被控主机：192.168.64.108
这一步需要Ubuntu16.2开启ip转发和NAT，否则CD的连接无法建立
							  lcx_listen							 lcx_slave
A@mstsc客户端---B服务端left:10000  C服务端left:40050---D客户端left:40050  E客户端right:3389---F服务端right:3389
mstsc建立一条A和B的连接
服务端B和C由lcx -listen创建，并建立B和C的数据转发（B将从A接收到的数据转发给D，C将从D接收到的数据写给A）
客户端D和E由lcx -slave创建，并建立D到E的数据转发（D将从C接收到的数据转发给F，E将从F接收到的数据写给C）
最后只有三条连接，A和B、C和D、E和F，也就是虚线所体现的
lcx_listen和lcx_slave底层是while(1)配合fork多进程实现的，也就是BCDE这四部分可以复制出来无数个，假如F的服务是接受多客户端的（如MySQL的3306，但3389远程登录不支持，一个mstsc客户端会把另一个客户端挤掉，因为windows不是多用户的），就可以建立无数条到F的连接

一、基础用法(PS：测试通过)
（PS：被控端的某个服务处于内网，将其映射到外网）
10.10.10.64需要为公网地址，192.168.64.108能访问外网
①Ubuntu16.1：./lcx –listen 40050 10000
开启两个TCP服务器监听，分别监听40050和10000端口，等这两个连接建立起来后相互转发从这两条连接接收到的数据
②Ubuntu7.04：lcx -slave 10.10.10.64 40050 127.0.0.1 3389
		 或lcx -slave 10.10.10.64 40050 192.168.64.108 3389
被控端执行两个TCP客户端，一个建立到10.10.10.64:40050的连接，一个建立到本机127.0.0.1:3389的连接，并相互转发从这两条连接接收到的数据
③本机用mstsc连接10.10.10.64:10000或127.0.0.1:10000
先把传输层TCP的连接建立好（相当于建立一条如下所示的完整的连接），也就可以进行转发，然后A和F进行应用层mstsc的登录协商和之后的远程数据传输

二、基础用法的进阶
10.10.10.64需要为公网地址，192.168.64.108能访问外网
1、可以通过lcx来访问被控制端局域网内的其他机器，如用本机10.10.10.64通过192.168.64.108来访问192.168.64.90的3389端口，
本机：lcx -listen 40050 10000
被控端：lcx -slave 10.10.10.64 40050 192.168.64.90 3389
本机：127.0.0.1:10000
（相当于把上面完整连接的A从本机换成了局域网其他主机，只要A和B能网络互通就行）
2、甚至可以用本机局域网的电脑来访问被控制端局域网的其他电脑，如192.168.81.32（PS：81.32访问10.64需要Ubuntu16.1开启ip_forword转发）通过10.10.10.64和192.168.64.108来访问192.168.64.90的3389端口
本机：lcx -listen 40050 10000
被控端：lcx -slave 10.10.10.64 40050 192.168.64.90 3389
本机局域网内其他主机：127.0.0.1:10000
（相当于把上面完整连接的F从本机换成了局域网其他主机，只要F和E能网络互通就行）

三、端口映射（NAT）
（PS：和上面的区别是本机处于内网，需要使用lcx_tran进行端口映射来连接被控端）
本机192.168.81.32，被控端192.168.64.108，
本机为内网主机，和外网有条映射（192.168.81.32:40000到10.10.10.64:50000）
这条映射可以用公网IP为10.10.10.64的路由器的NAT来做，
也可以通过公网IP为10.10.10.64的主机执行：lcx -tran 50000 192.168.81.32 40000
本机：lcx -listen 40000 10000
被控端：lcx -slave 10.10.10.64 50000 192.168.64.108
(相当于在上面完整连接的的C和D中间加上一个lcx_tran程序，也就是一个客户端X和一个服务器Y来进行转发)
left表示本机：192.168.81.32
middle表示NAT主机：10.10.10.64
right表示被控主机：192.168.64.108
第一个@后的C表示Client，S表示Server
								    lcx_listen						lcx_tran                             lcx_slave
A@C@left:10000(mstsc)---B@S@left:10000  C@S@left:40000---X@C@left:40000  Y@S@middle:50000---D@C@middle:50000  E@C@right:3389---F@S@right:3389

四、隐藏身份
(PS：下面的两种情况10.10.10.81都拥有共有IP)
1、跳板拥有公网IP
（PS：10.10.10.81是公网IP，跳板10.10.10.64是公网和私有IP都可以，只要本机能连到10.10.10.64就行，
想错了10.10.10.64要是为私有IP的话必须和本机在一个局域网内，否则本机无法连接到10.10.10.64，
和基础用法中的区别是10.10.10.81属于公网IP，lcx_tran使用客户端C能直接连过去，
10.10.10.81若是私有IP的话，则lcx_trans的C无法连接到D，此时只能使用lcx_slave，让10.10.10.81充当客户端连接出去）
跳板10.10.10.64运行：lcx -tran 50000 10.10.10.81 3389
本机运行：mstsc 10.10.10.64:50000
被控端为Ubuntu16.2:10.10.10.81，开放22端口
跳板为Ubuntu16.1:10.10.10.64，运行lcx_tran
本机为Ar93xx，使用ssh连接
									                      lcx_tran								
A本机mstsc客户端10.10.10.64:50000---B服务端10.10.10.64:50000  C客户端10.10.10.81:22---D服务端10.10.10.81:22

2、跳板是私有IP，但有跳板的路由器web页面访问权限
路由器的NAT映射（10.10.10.64:50000到192.168.81.32:30000）
跳板10.10.10.64运行：lcx -tran 50000 10.10.10.81 3389
windows运行：mstsc 192.168.81.32:30000

此时：
Ubuntu16.2相当于被控端
Ubuntu16.1相当于跳板
									                                         lcx_tran								
A@mstsc客户端192.168.81.32:30000---路由器NAT转换---B服务端10.10.10.64:50000  C客户端10.10.10.81:3389---D服务端10.10.10.81:3389
